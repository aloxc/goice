// **********************************************************************
//
// Copyright (c) 2003-2017 ZeroC, Inc. All rights reserved.
//
// This copy of Ice is licensed to you under the terms described in the
// ICE_LICENSE file included in this distribution.
//
// **********************************************************************
//
// Ice version 3.6.4
//
// <auto-generated>
//
// Generated from file `goice.ice'
//
// Warning: do not edit this file.
//
// </auto-generated>
//

package com.github.aloxc.goiceinter;

public class Request implements Cloneable, java.io.Serializable
{
    public String method;

    public java.util.Map<String, String> params;

    public Request()
    {
        method = "";
    }

    public Request(String method, java.util.Map<String, String> params)
    {
        this.method = method;
        this.params = params;
    }

    public boolean
    equals(Object rhs)
    {
        if(this == rhs)
        {
            return true;
        }
        Request _r = null;
        if(rhs instanceof Request)
        {
            _r = (Request)rhs;
        }

        if(_r != null)
        {
            if(method != _r.method)
            {
                if(method == null || _r.method == null || !method.equals(_r.method))
                {
                    return false;
                }
            }
            if(params != _r.params)
            {
                if(params == null || _r.params == null || !params.equals(_r.params))
                {
                    return false;
                }
            }

            return true;
        }

        return false;
    }

    public int
    hashCode()
    {
        int __h = 5381;
        __h = IceInternal.HashUtil.hashAdd(__h, "::goiceinter::Request");
        __h = IceInternal.HashUtil.hashAdd(__h, method);
        __h = IceInternal.HashUtil.hashAdd(__h, params);
        return __h;
    }

    public Request
    clone()
    {
        Request c = null;
        try
        {
            c = (Request)super.clone();
        }
        catch(CloneNotSupportedException ex)
        {
            assert false; // impossible
        }
        return c;
    }

    public void
    __write(IceInternal.BasicStream __os)
    {
        __os.writeString(method);
        ParamsHelper.write(__os, params);
    }

    public void
    __read(IceInternal.BasicStream __is)
    {
        method = __is.readString();
        params = ParamsHelper.read(__is);
    }

    static public void
    __write(IceInternal.BasicStream __os, Request __v)
    {
        if(__v == null)
        {
            __nullMarshalValue.__write(__os);
        }
        else
        {
            __v.__write(__os);
        }
    }

    static public Request
    __read(IceInternal.BasicStream __is, Request __v)
    {
        if(__v == null)
        {
             __v = new Request();
        }
        __v.__read(__is);
        return __v;
    }
    
    private static final Request __nullMarshalValue = new Request();

    public static final long serialVersionUID = -909069766L;
}
