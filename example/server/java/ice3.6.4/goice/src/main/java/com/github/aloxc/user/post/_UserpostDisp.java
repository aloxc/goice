// **********************************************************************
//
// Copyright (c) 2003-2017 ZeroC, Inc. All rights reserved.
//
// This copy of Ice is licensed to you under the terms described in the
// ICE_LICENSE file included in this distribution.
//
// **********************************************************************
//
// Ice version 3.6.4
//
// <auto-generated>
//
// Generated from file `userpost.ice'
//
// Warning: do not edit this file.
//
// </auto-generated>
//

package com.github.aloxc.user.post;

public abstract class _UserpostDisp extends Ice.ObjectImpl implements Userpost
{
    protected void
    ice_copyStateFrom(Ice.Object __obj)
        throws CloneNotSupportedException
    {
        throw new CloneNotSupportedException();
    }

    public static final String[] __ids =
    {
        "::Ice::Object",
        "::user::post::Userpost"
    };

    public boolean ice_isA(String s)
    {
        return java.util.Arrays.binarySearch(__ids, s) >= 0;
    }

    public boolean ice_isA(String s, Ice.Current __current)
    {
        return java.util.Arrays.binarySearch(__ids, s) >= 0;
    }

    public String[] ice_ids()
    {
        return __ids;
    }

    public String[] ice_ids(Ice.Current __current)
    {
        return __ids;
    }

    public String ice_id()
    {
        return __ids[1];
    }

    public String ice_id(Ice.Current __current)
    {
        return __ids[1];
    }

    public static String ice_staticId()
    {
        return __ids[1];
    }

    public final String doarr(String[] sar, int[] iarr, String key, String value, int i)
    {
        return doarr(sar, iarr, key, value, i, null);
    }

    public final int[] getIntArr(int i)
    {
        return getIntArr(i, null);
    }

    public final String[] getStrArr(int i)
    {
        return getStrArr(i, null);
    }

    public final String threeparams(String name, int value, double any)
    {
        return threeparams(name, value, any, null);
    }

    public final String todo(String json)
    {
        return todo(json, null);
    }

    public final String valuelong(String name, long value)
    {
        return valuelong(name, value, null);
    }

    public final String valuestr(String name, String value)
    {
        return valuestr(name, value, null);
    }

    public static Ice.DispatchStatus ___valuestr(Userpost __obj, IceInternal.Incoming __inS, Ice.Current __current)
    {
        __checkMode(Ice.OperationMode.Normal, __current.mode);
        IceInternal.BasicStream __is = __inS.startReadParams();
        String name;
        String value;
        name = __is.readString();
        value = __is.readString();
        __inS.endReadParams();
        String __ret = __obj.valuestr(name, value, __current);
        IceInternal.BasicStream __os = __inS.__startWriteParams(Ice.FormatType.DefaultFormat);
        __os.writeString(__ret);
        __inS.__endWriteParams(true);
        return Ice.DispatchStatus.DispatchOK;
    }

    public static Ice.DispatchStatus ___valuelong(Userpost __obj, IceInternal.Incoming __inS, Ice.Current __current)
    {
        __checkMode(Ice.OperationMode.Normal, __current.mode);
        IceInternal.BasicStream __is = __inS.startReadParams();
        String name;
        long value;
        name = __is.readString();
        value = __is.readLong();
        __inS.endReadParams();
        String __ret = __obj.valuelong(name, value, __current);
        IceInternal.BasicStream __os = __inS.__startWriteParams(Ice.FormatType.DefaultFormat);
        __os.writeString(__ret);
        __inS.__endWriteParams(true);
        return Ice.DispatchStatus.DispatchOK;
    }

    public static Ice.DispatchStatus ___threeparams(Userpost __obj, IceInternal.Incoming __inS, Ice.Current __current)
    {
        __checkMode(Ice.OperationMode.Normal, __current.mode);
        IceInternal.BasicStream __is = __inS.startReadParams();
        String name;
        int value;
        double any;
        name = __is.readString();
        value = __is.readInt();
        any = __is.readDouble();
        __inS.endReadParams();
        String __ret = __obj.threeparams(name, value, any, __current);
        IceInternal.BasicStream __os = __inS.__startWriteParams(Ice.FormatType.DefaultFormat);
        __os.writeString(__ret);
        __inS.__endWriteParams(true);
        return Ice.DispatchStatus.DispatchOK;
    }

    public static Ice.DispatchStatus ___doarr(Userpost __obj, IceInternal.Incoming __inS, Ice.Current __current)
    {
        __checkMode(Ice.OperationMode.Normal, __current.mode);
        IceInternal.BasicStream __is = __inS.startReadParams();
        String[] sar;
        int[] iarr;
        String key;
        String value;
        int i;
        sar = StrArrHelper.read(__is);
        iarr = IntArrHelper.read(__is);
        key = __is.readString();
        value = __is.readString();
        i = __is.readInt();
        __inS.endReadParams();
        String __ret = __obj.doarr(sar, iarr, key, value, i, __current);
        IceInternal.BasicStream __os = __inS.__startWriteParams(Ice.FormatType.DefaultFormat);
        __os.writeString(__ret);
        __inS.__endWriteParams(true);
        return Ice.DispatchStatus.DispatchOK;
    }

    public static Ice.DispatchStatus ___todo(Userpost __obj, IceInternal.Incoming __inS, Ice.Current __current)
    {
        __checkMode(Ice.OperationMode.Normal, __current.mode);
        IceInternal.BasicStream __is = __inS.startReadParams();
        String json;
        json = __is.readString();
        __inS.endReadParams();
        String __ret = __obj.todo(json, __current);
        IceInternal.BasicStream __os = __inS.__startWriteParams(Ice.FormatType.DefaultFormat);
        __os.writeString(__ret);
        __inS.__endWriteParams(true);
        return Ice.DispatchStatus.DispatchOK;
    }

    public static Ice.DispatchStatus ___getIntArr(Userpost __obj, IceInternal.Incoming __inS, Ice.Current __current)
    {
        __checkMode(Ice.OperationMode.Normal, __current.mode);
        IceInternal.BasicStream __is = __inS.startReadParams();
        int i;
        i = __is.readInt();
        __inS.endReadParams();
        int[] __ret = __obj.getIntArr(i, __current);
        IceInternal.BasicStream __os = __inS.__startWriteParams(Ice.FormatType.DefaultFormat);
        IntArrHelper.write(__os, __ret);
        __inS.__endWriteParams(true);
        return Ice.DispatchStatus.DispatchOK;
    }

    public static Ice.DispatchStatus ___getStrArr(Userpost __obj, IceInternal.Incoming __inS, Ice.Current __current)
    {
        __checkMode(Ice.OperationMode.Normal, __current.mode);
        IceInternal.BasicStream __is = __inS.startReadParams();
        int i;
        i = __is.readInt();
        __inS.endReadParams();
        String[] __ret = __obj.getStrArr(i, __current);
        IceInternal.BasicStream __os = __inS.__startWriteParams(Ice.FormatType.DefaultFormat);
        StrArrHelper.write(__os, __ret);
        __inS.__endWriteParams(true);
        return Ice.DispatchStatus.DispatchOK;
    }

    private final static String[] __all =
    {
        "doarr",
        "getIntArr",
        "getStrArr",
        "ice_id",
        "ice_ids",
        "ice_isA",
        "ice_ping",
        "threeparams",
        "todo",
        "valuelong",
        "valuestr"
    };

    public Ice.DispatchStatus __dispatch(IceInternal.Incoming in, Ice.Current __current)
    {
        int pos = java.util.Arrays.binarySearch(__all, __current.operation);
        if(pos < 0)
        {
            throw new Ice.OperationNotExistException(__current.id, __current.facet, __current.operation);
        }

        switch(pos)
        {
            case 0:
            {
                return ___doarr(this, in, __current);
            }
            case 1:
            {
                return ___getIntArr(this, in, __current);
            }
            case 2:
            {
                return ___getStrArr(this, in, __current);
            }
            case 3:
            {
                return ___ice_id(this, in, __current);
            }
            case 4:
            {
                return ___ice_ids(this, in, __current);
            }
            case 5:
            {
                return ___ice_isA(this, in, __current);
            }
            case 6:
            {
                return ___ice_ping(this, in, __current);
            }
            case 7:
            {
                return ___threeparams(this, in, __current);
            }
            case 8:
            {
                return ___todo(this, in, __current);
            }
            case 9:
            {
                return ___valuelong(this, in, __current);
            }
            case 10:
            {
                return ___valuestr(this, in, __current);
            }
        }

        assert(false);
        throw new Ice.OperationNotExistException(__current.id, __current.facet, __current.operation);
    }

    protected void __writeImpl(IceInternal.BasicStream __os)
    {
        __os.startWriteSlice(ice_staticId(), -1, true);
        __os.endWriteSlice();
    }

    protected void __readImpl(IceInternal.BasicStream __is)
    {
        __is.startReadSlice();
        __is.endReadSlice();
    }

    public static final long serialVersionUID = 0L;
}
